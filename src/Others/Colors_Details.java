/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Others;

import MyConn.MyConn;
import java.awt.Color;
import java.awt.Component;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Samsung Pc
 */
public class Colors_Details extends javax.swing.JPanel {

    private Color user_Selected_Color;

    /**
     * Creates new form Categories
     */
    public Colors_Details() {
        initComponents();
        //Set Color ID
        try {
            int id = 0;
            ResultSet getID = MyConn.search("select color_id from item_colors order by color_id desc limit 1");
            while (getID.next()) {
                id = getID.getInt(1);
            }
            color_ID.setText(id + 1 + "");
        } catch (Exception e) {
        }

        TableColorCellRenderer render = new TableColorCellRenderer();
        jTable1.setDefaultRenderer(Object.class, render);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        new_Category = new javax.swing.JPanel();
        color_ID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        color_Name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        add_New_Color = new javax.swing.JButton();
        update_Color = new javax.swing.JButton();
        selected_Color = new javax.swing.JLabel();
        select_Color = new javax.swing.JButton();
        add_New_Category1 = new javax.swing.JButton();
        new_Category1 = new javax.swing.JPanel();
        search_Bar = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        search_Colors = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        new_Category.setBackground(new java.awt.Color(255, 255, 255));
        new_Category.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Add Colour", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        color_ID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        color_ID.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Colour ID");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText(":");

        color_Name.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText(":");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Colour Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Colour");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText(":");

        add_New_Color.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add_New_Color.setText("Add Colour");
        add_New_Color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_New_ColorActionPerformed(evt);
            }
        });

        update_Color.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        update_Color.setText("Update Colour");
        update_Color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_ColorActionPerformed(evt);
            }
        });

        selected_Color.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Selected Colour"));
        selected_Color.setOpaque(true);

        select_Color.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        select_Color.setText("Select Colour");
        select_Color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_ColorActionPerformed(evt);
            }
        });

        add_New_Category1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add_New_Category1.setText("Clear All");
        add_New_Category1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_New_Category1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout new_CategoryLayout = new javax.swing.GroupLayout(new_Category);
        new_Category.setLayout(new_CategoryLayout);
        new_CategoryLayout.setHorizontalGroup(
            new_CategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(new_CategoryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(new_CategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(new_CategoryLayout.createSequentialGroup()
                        .addGroup(new_CategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(new_CategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(new_CategoryLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(color_ID))
                            .addGroup(new_CategoryLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(color_Name))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, new_CategoryLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(add_New_Category1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(add_New_Color, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(update_Color, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(new_CategoryLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selected_Color, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(select_Color, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        new_CategoryLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel4, jLabel5});

        new_CategoryLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {add_New_Color, update_Color});

        new_CategoryLayout.setVerticalGroup(
            new_CategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(new_CategoryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(new_CategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(color_ID)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(new_CategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(color_Name)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(new_CategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(new_CategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(select_Color, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selected_Color, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(new_CategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update_Color, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add_New_Color, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add_New_Category1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        new_CategoryLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel4, jLabel5});

        new_CategoryLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {add_New_Color, update_Color});

        new_Category1.setBackground(new java.awt.Color(255, 255, 255));
        new_Category1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Search Colour", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        search_Bar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        search_Bar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search_BarKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Colour Name");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText(":");

        search_Colors.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        search_Colors.setText("Search Colours");
        search_Colors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_ColorsActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Colour ID", "Colour Name", "Colour"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(25);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout new_Category1Layout = new javax.swing.GroupLayout(new_Category1);
        new_Category1.setLayout(new_Category1Layout);
        new_Category1Layout.setHorizontalGroup(
            new_Category1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(new_Category1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(new_Category1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
                    .addGroup(new_Category1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(search_Bar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(search_Colors, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        new_Category1Layout.setVerticalGroup(
            new_Category1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(new_Category1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(new_Category1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(new_Category1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(search_Bar, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                        .addComponent(search_Colors, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(new_Category, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(new_Category1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(new_Category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(new_Category1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void add_New_ColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_New_ColorActionPerformed
        try {
            MyConn.save("INSERT INTO `mobile_phone_shop`.`item_colors` (`Color_ID`, `Color_Name`, `Color_Code`) VALUES ('" + color_ID.getText() + "', '" + color_Name.getText() + "', '" + user_Selected_Color.getRGB() + "');");
            JOptionPane.showMessageDialog(this, "Completed", "Message", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error : " + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_add_New_ColorActionPerformed

    private void select_ColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_ColorActionPerformed
        user_Selected_Color = JColorChooser.showDialog(this, "Select a Color", selected_Color.getBackground());
        selected_Color.setBackground(user_Selected_Color);
    }//GEN-LAST:event_select_ColorActionPerformed

    private void update_ColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_ColorActionPerformed
        try {
            MyConn.save("UPDATE `mobile_phone_shop`.`item_colors` SET  `Color_Name`='" + color_Name.getText() + "', `Color_Code`='" + user_Selected_Color.getRGB() + "' WHERE `Color_ID`='" + color_ID.getText() + "';");
            JOptionPane.showMessageDialog(this, "Completed", "Message", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error : " + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_update_ColorActionPerformed

    private void search_ColorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_ColorsActionPerformed
        try {
            DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
            int rowCount = df.getRowCount();
            for (int i = 0; i < rowCount; i++) {
                df.removeRow(0);
            }
            ResultSet rs = MyConn.search("select * from item_colors");
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                df.addRow(v);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_search_ColorsActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        color_ID.setText(jTable1.getValueAt(row, 0).toString());
        color_Name.setText(jTable1.getValueAt(row, 1).toString());
        try {
            Color my_Color = null;
            ResultSet getColor = MyConn.search("select color_code from item_colors where color_id = '" + jTable1.getValueAt(row, 0).toString() + "' ");
            while (getColor.next()) {
                my_Color = new Color(getColor.getInt(1));
            }
            selected_Color.setBackground(my_Color);
            user_Selected_Color = my_Color;
        } catch (Exception e) {
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void search_BarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_BarKeyReleased
        try {
            DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
            int rowCount = df.getRowCount();
            for (int i = 0; i < rowCount; i++) {
                df.removeRow(0);
            }
            ResultSet rs = MyConn.search("select * from item_colors where color_name like '" + search_Bar.getText() + "%' ");
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                df.addRow(v);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_search_BarKeyReleased

    private void add_New_Category1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_New_Category1ActionPerformed
        // TODO add your handling code here:
        color_ID.setText(null);
        color_Name.setText(null);
        search_Bar.setText(null);
        selected_Color.setBackground(Color.WHITE);
        try {
           int id = 0;
            ResultSet getID = MyConn.search("select color_id from item_colors order by color_id desc limit 1");
            while (getID.next()) {
                id = getID.getInt(1);
            }
            color_ID.setText(id + 1 + "");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_add_New_Category1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_New_Category1;
    private javax.swing.JButton add_New_Color;
    private javax.swing.JTextField color_ID;
    private javax.swing.JTextField color_Name;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel new_Category;
    private javax.swing.JPanel new_Category1;
    private javax.swing.JTextField search_Bar;
    private javax.swing.JButton search_Colors;
    private javax.swing.JButton select_Color;
    private javax.swing.JLabel selected_Color;
    private javax.swing.JButton update_Color;
    // End of variables declaration//GEN-END:variables
}

class TableColorCellRenderer implements TableCellRenderer {

    private static final TableCellRenderer RENDERER = new DefaultTableCellRenderer();

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        //To change body of generated methods, choose Tools | Templates.
        Component c = RENDERER.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        Object result = table.getModel().getValueAt(row, 0);
        Color color = new Color(354);
        if (column == 2) {
            try {
                ResultSet rs = MyConn.search("select color_code from item_colors where color_id = '" + result.toString() + "' ");
                while (rs.next()) {
                    color = new Color(rs.getInt(1));
                }
            } catch (Exception e) {
            }
        } else {
            color = Color.WHITE;
        }
        c.setBackground(color);
        return c;
    }

}
